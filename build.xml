<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<project name="ZTal" default="build" basedir=".">

	<!-- Setup the set of files that we want processed and what we want ignored
		 by the various tasks -->
	<fileset dir="${project.basedir}/source" id="sources">
		<include name="**/*.php" />
	</fileset>

    <!-- unitTesting task is currently not performed because there are no unit
		 tests available for ZTal -->
	<target name="build" depends="initialise, codeSniffer, codeQuality, document" />

	<target name="initialise" depends="clean, prepare" />

	<target name="clean">
        <delete dir="${project.basedir}/build" />

    </target>

    <target name="prepare">
        <mkdir dir="${project.basedir}/build" />
        <mkdir dir="${project.basedir}/build/logs" />
        <mkdir dir="${project.basedir}/build/logs/coverage" />
        <mkdir dir="${project.basedir}/build/docs" />
    </target>

	<target name="unitTesting" depends="phpunit:configure, phpunit:run" />

	<target name="phpunit:configure">
		<echo file="${project.basedir}/source/tests/phpunit.xml" append="false"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<phpunit>
  <filter>
  <blacklist>
    <directory suffix=".php">${project.basedir}/source/tests</directory>
    <directory suffix=".php">/namesco/third_party</directory>
    <directory suffix=".php">/usr/share/php</directory>
  </blacklist>
</filter>
</phpunit>]]></echo>
	</target>

	<!-- Not using the Phing PHPUnit task because it doesn't work properly with
	     test suites and doesn't have the required formatters to get all of the
		 output that we need. -->
	<target name="phpunit:run">
		<exec command="phpunit --log-junit ${project.basedir}/build/logs/phpunit.xml
							   --coverage-clover ${project.basedir}/build/logs/phpunit.coverage.xml
							   --coverage-html ${project.basedir}/build/logs/coverage/
							   --configuration ${project.basedir}/source/tests/phpunit.xml
							   AllTests"
			  dir="${project.basedir}/source/tests" checkreturn="true" />
	</target>


	<target name="codeSniffer" depends="php-codesniffer" />

	<target name="php-codesniffer">
		<phpcodesniffer standard="Namesco">
			<fileset refid="sources" />
			<formatter type="checkstyle" outfile="${project.basedir}/build/logs/checkstyle.xml"/>
		</phpcodesniffer>
	</target>

	<target name="codeQuality" depends="pdepend, phpmd, phpcpd" />

	<target name="pdepend">
		<phpdepend>
			<fileset refid="sources" />
			<logger type="jdepend-xml"
					outfile="${project.basedir}/build/logs/jdepend.xml" />
		</phpdepend>
	</target>

	<target name="phpmd">
		<phpmd>
			<fileset refid="sources" />
			<formatter type="xml" outfile="${project.basedir}/build/logs/pmd-codesize.xml"/>
		</phpmd>
	</target>

	<target name="phpcpd">
		<phpcpd>
			<fileset refid="sources" />
			<formatter type="pmd" outfile="${project.basedir}/build/logs/pmd-cpd.xml"/>
		</phpcpd>
	</target>

	<target name="document" depends="php-documentor" />

	<target name="php-documentor">
		<exec command="docblox run --title '${phing.project.name}'
							  --target ${project.basedir}/build/docs
							  --directory ."
			  dir="${project.basedir}/source" checkreturn="true" />
		<exec command="docblox transform --source ${project.basedir}/build/docs/structure.xml
										 --target ${project.basedir}/build/docs
										 --template default"
			  dir="${project.basedir}/source" checkreturn="true" />
			  <!-- 			  PHPDoc options not supported by DocBlox
							  -\-sourcecode on
							  -\-undocumentedelements on
							  -\-defaultpackagename Namesco
							   -->

	</target>

</project>
